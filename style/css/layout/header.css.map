{"version":3,"sources":["layout/header.scss","layout/header.css","utils/_mixin.scss"],"names":[],"mappings":"AAEA;EACI,sBAAsB;EACtB,eAAe;EACf,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,YAAY;ACDhB;;AAEA;ECkHgC,eAAY;EDhH1C,8BDTM;ECSN,sBDTM;ECUN,+BDsDD;ECtDC,uBDsDD;ACrDD;;AAEA;EC4GgC,aAAY;ED1G1C,oCDfM;ACgBR;;AAEA;EACE,oBDToB;ECSpB,oBDToB;ECSpB,aDToB;ACUtB;;AAEA;ECmGgC,2BAAkB;EAAlB,kBAAkB;EDjGhD,kBDxBM;ACyBR;;AAEA;EACE,iBDlB4D;ACmB9D;;AAEA;;ED/BA,yBAmBQ;ECeN,WDde;ECef,WDdM;EArBR,sBAuBI;ECcF,kBDoBG;ECnBH,SDtCK;ECuCL,WDZU;ECaV,gCDZ4B;ECY5B,wBDZ4B;ECa5B,iCDlBE;ECkBF,yBDlBE;ACmBJ;;AAEA;EACE,cDRqB;ECSrB,2CDRyB;ECSzB,qBDRoB;ACStB;;AAEA;EACE,iBDRc;ACShB;;AAEA;EACE,YDLU;ECMV,cDLU;ACMZ;;AAEA;EACE;IDCU,UAAQ;ECClB;;EDSE;IACE,MAAK;EAGP;ACRJ;;AARA;EACE;IDCU,UAAQ;ECClB;;EDSE;IACE,MAAK;EAGP;ACRJ;;ADaA;EACI;IACE,UAAU;EAGZ;;ECXF;IACE,UAAU;EACZ;AACF;;ADGA;EACI;IACE,UAAU;EAGZ;;ECXF;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,aAAa;EACf;;EAEA;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,aAAa;EACf;;EAEA;IACE,eAAe;EACjB;AACF","file":"header.css","sourcesContent":["@import '../utils/mixin';\r\n\r\n.header {\r\n    background-color: #fff;\r\n    padding: 15px 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: 700;\r\n\r\n    @include media((\r\n        height: (xl: 100px, lg: 100px, md: 80px, sm: 60px),\r\n        padding: (xl: 15px 0, lg: 15px 0, md: 10px 0, sm: 10px 0)\r\n    ));\r\n\r\n    &.header__scroll {\r\n        position: fixed;\r\n        animation-duration: 1s;\r\n        animation-name: slidein;\r\n    }\r\n\r\n    nav {\r\n        display: grid;\r\n        grid-template-columns: 1fr 230px 1fr;\r\n    }\r\n    .header__topbar {\r\n        display: flex;\r\n\r\n        li {\r\n            align-self: center;\r\n            position: relative;\r\n\r\n            & ~ li {\r\n                margin-left: 30px;\r\n            }\r\n\r\n            &:hover:after,\r\n            &.active:after {\r\n                background-color: #5363db;\r\n                content: '';\r\n                height: 1px;\r\n                left: calc(50% - 15px);\r\n                position: absolute;\r\n                top: 25px;\r\n                width: 30px;\r\n                animation-duration: 1.5s;\r\n                animation-name: navActive;\r\n            }\r\n        }\r\n\r\n        a {\r\n            color: #5363db;\r\n            font-family: 'OpenSansSemiBold', sans-serif;\r\n            text-decoration: none;\r\n        }\r\n\r\n        &-left {\r\n            margin-left: auto;\r\n        }\r\n    }\r\n    .header__logo {\r\n        img {\r\n            height: 70px;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// Animations\r\n\r\n@keyframes slidein {\r\n    from {\r\n      top: -100%;\r\n    }\r\n  \r\n    to {\r\n        top: 0;\r\n    }\r\n}\r\n\r\n@keyframes navActive {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n  \r\n    to {\r\n        opacity: 1;\r\n    }\r\n  }",".header {\n  background-color: #fff;\n  padding: 15px 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: 700;\n}\n\n.header.header__scroll {\n  position: fixed;\n  animation-duration: 1s;\n  animation-name: slidein;\n}\n\n.header nav {\n  display: grid;\n  grid-template-columns: 1fr 230px 1fr;\n}\n\n.header .header__topbar {\n  display: flex;\n}\n\n.header .header__topbar li {\n  align-self: center;\n  position: relative;\n}\n\n.header .header__topbar li ~ li {\n  margin-left: 30px;\n}\n\n.header .header__topbar li:hover:after,\n.header .header__topbar li.active:after {\n  background-color: #5363db;\n  content: '';\n  height: 1px;\n  left: calc(50% - 15px);\n  position: absolute;\n  top: 25px;\n  width: 30px;\n  animation-duration: 1.5s;\n  animation-name: navActive;\n}\n\n.header .header__topbar a {\n  color: #5363db;\n  font-family: 'OpenSansSemiBold', sans-serif;\n  text-decoration: none;\n}\n\n.header .header__topbar-left {\n  margin-left: auto;\n}\n\n.header .header__logo img {\n  height: 70px;\n  margin: 0 auto;\n}\n\n@keyframes slidein {\n  from {\n    top: -100%;\n  }\n\n  to {\n    top: 0;\n  }\n}\n\n@keyframes navActive {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@media only screen and (min-width: 380px) {\n  .header {\n    height: 60px;\n  }\n\n  .header {\n    padding: 10px 0;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .header {\n    height: 80px;\n  }\n\n  .header {\n    padding: 10px 0;\n  }\n}\n\n@media only screen and (min-width: 992px) {\n  .header {\n    height: 100px;\n  }\n\n  .header {\n    padding: 15px 0;\n  }\n}\n\n@media only screen and (min-width: 1260px) {\n  .header {\n    height: 100px;\n  }\n\n  .header {\n    padding: 15px 0;\n  }\n}","$breakpoints: (\r\n        xl: 1260,\r\n        lg: 992,\r\n        md: 768,\r\n        sm: 380,\r\n        xs: 0\r\n);\r\n$media-direction: min;\r\n\r\n@mixin css_property($property, $value){\r\n    @if type_of($value) == string{\r\n        #{$property}: unquote($value);\r\n    }@else{\r\n        #{$property}: $value;\r\n    }\r\n}\r\n\r\n@function splitScreens($string, $seperator){\r\n    $string: inspect(quote($string));\r\n    $sepId: str-index(quote($string), $seperator);\r\n    @if($sepId){\r\n        $array: (quote(str-slice($string, 0, $sepId - 1)), quote(str-slice($string, $sepId + 1)));\r\n        @return $array;\r\n    }@else{\r\n        @return $string;\r\n    }\r\n}\r\n//@media screen\r\n@mixin media($properties, $orientation: false){\r\n\r\n    @each $property, $value in $properties {\r\n        @if type_of($value) == 'map' {\r\n            @each $screen, $val in $value {\r\n                $screen: splitScreens($screen, '-');\r\n                @if type_of($screen) == 'list'{\r\n                    $min_screen: nth($screen, 1);\r\n                    $max_screen: nth($screen, 2);\r\n                    @if $min_screen == min or $min_screen == max{\r\n                        $media-direction: $min_screen;\r\n                        @if $orientation {\r\n                            @if map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $max_screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }@else{\r\n                                @media only screen and (#{$media-direction}-width: $max_screen + 'px')  and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        } @else {\r\n                            @if map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $max_screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }@else{\r\n                                @media only screen and (#{$media-direction}-width: $max_screen + 'px') {\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        }\r\n                    } @else {\r\n                        @if $orientation {\r\n                            @if map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if map-has-key($breakpoints,  $min_screen) and not map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: $max_screen + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if not map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: $max_screen + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        } @else {\r\n                            @if map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if map-has-key($breakpoints,  $min_screen) and not map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: $max_screen + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if not map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: $max_screen + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }@else{\r\n                    @if $screen == 'print' {\r\n                        @media print{\r\n                            @include css_property($property, $val);\r\n                        }\r\n                    } @else {\r\n                        @if $orientation {\r\n                            @if map-has-key($breakpoints, $screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @if $screen == all {\r\n                                    @media only screen and (orientation: $orientation) {\r\n                                        @include css_property($property, $val);\r\n                                    }\r\n                                } @else {\r\n                                    @media only screen and (#{$media-direction}-width: $screen + 'px') and (orientation: $orientation) {\r\n                                        @include css_property($property, $val);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } @else {\r\n                            @if map-has-key($breakpoints, $screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @if $screen == all {\r\n                                    @include css_property($property, $val);\r\n                                } @else {\r\n                                    @media only screen and (#{$media-direction}-width: $screen + 'px'){\r\n                                        @include css_property($property, $val);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } @else {\r\n            @if $property == 'extend' {\r\n                @extend #{unquote($value)} !optional;\r\n            }@else {\r\n                @include css_property($property, $value);\r\n            }\r\n        }\r\n    }\r\n};"]}