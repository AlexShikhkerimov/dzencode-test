{"version":3,"sources":["layout/main-banner.scss","layout/main-banner.css","utils/_mixin.scss"],"names":[],"mappings":"AAEA;EACI,iBAAiB;EACjB,WAAW;EACX,mDAAmD;EAEnD,aAAa;EACb,gBAAgB;ACFpB;;AAEA;EACE,oBDMgB;ECNhB,oBDMgB;ECNhB,aDMgB;ACLlB;;AAEA;EACE,UDQM;ACPR;;AAEA;EACE,sBDSwB;ECRxB,kBDSuB;ECRvB,gBDSqB;ECRrB,wBDS8B;ECR9B,kBDHG;ACIL;;AAEA;EACE,cDWU;ECVV,2CDWsB;ECVtB,eDWU;ECVV,oBDWyB;ACV3B;;AAEA;;EAEE,YDaiB;ECZjB,WDhBG;ECiBH,kBDeqB;ECdrB,yBDewB;ECdxB,YDeU;ECdV,mBDeyB;ECdzB,eDeqB;ECdrB,WDeU;ACdZ;;AAEA;EACE,UDeU;ECdV,iBDesB;EA1DxB,cA8DI;ACjBJ;;AAEA;EACE,WDkBM;ECjBN,cDkBiB;ECjBjB,iBCuE0C;EDtE1C,eDnDF;ECoDE,2BDqBG;ECpBH,kBCoE0C;EDnE1C,yBDQE;ECPF,+DDkBG;EClBH,uDDkBG;ECjBH,YCiEoC;EDhEpC,gBDzDU;EC0DV,YC/CM;ADgDR;;AAEA;EACE,2BC2DsD;ED1DtD,eD/DF;ECgEE,yBDOkC;ECNlC,kBCwD0C;EDvD1C,iBDJE;ACKJ;;AAEA;EACE,2CDGG;EAzEL,iBA2EI;ECHF,kBDImB;ECHnB,iBDImB;ACHrB;;AAEA;EACE;IACE,eDIwB;ECH1B;;EAEA;ICwC8B,eAAY;EDtC1C;;EAEA;IACE,eDXA;ECYF;;EAEA;IACE,eC/EI;EDgFN;AACF;;AAEA;EACE;IACE,eCrFI;EDsFN;;EAEA;IACE,oBAAoB;EACtB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,oBAAoB;EACtB;AACF;;AAEA;EACE;IACE,eAAe;EACjB;;EAEA;IACE,oBAAoB;EACtB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,oBAAoB;EACtB;AACF;;AAEA;EACE;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;AACF","file":"main-banner.css","sourcesContent":["@import '../utils/mixin';\r\n\r\n.main-banner {\r\n    margin-top: 100px;\r\n    color: #fff;\r\n    background-image: url('../../../img/slider-bg.png');\r\n    // background-position: right;\r\n    height: 600px;\r\n    padding: 100px 0;\r\n\r\n    &__container {\r\n        display: flex;\r\n    }\r\n\r\n    &__column {\r\n        width: 50%; \r\n    }\r\n\r\n    &__form {\r\n        background-color: #fff;\r\n        border-radius: 8px;\r\n        max-width: 300px;\r\n        margin: 0 20px auto auto;\r\n        padding: 40px 30px;\r\n\r\n        .title {\r\n            color: #5363db;\r\n            font-family: 'OpenSansSemiBold', sans-serif;\r\n            font-size: 25px;\r\n            padding-bottom: 20px;\r\n        }\r\n\r\n        input, select {\r\n            border: none;\r\n            color: #888;\r\n            border-radius: 8px;\r\n            background-color: rgb(242, 242, 242);\r\n            height: 50px;\r\n            margin-bottom: 15px;\r\n            padding: 0 10px;\r\n            width: 100%;\r\n        }\r\n\r\n        label {\r\n            color: red;\r\n            margin-top: -15px;\r\n            display: block;\r\n        }\r\n\r\n        .form-btn {\r\n            color: #fff;\r\n            display: block;\r\n            margin-left: auto;\r\n            font-size: 16px;\r\n            font-family: \"OpenSansBold\";\r\n            border-radius: 8px;\r\n            background-color: rgb(91, 108, 235);\r\n            box-shadow: 2.121px 2.121px 5px 0px rgba(0, 0, 0, 0.15);\r\n            height: 50px;\r\n            margin-top:15px;\r\n            width: 170px;              \r\n        }\r\n    }\r\n\r\n    .banner-title {\r\n        font-family: \"OpenSansBold\";\r\n        font-size: 48px;\r\n        text-transform: uppercase;\r\n        padding-left: 35px;\r\n        padding-top: 60px;\r\n\r\n        @include media((\r\n            font-size: (xl: 48px, lg: 42px, md: 38px, xs: 30px),\r\n            padding-left: (lg: 35px 0, md: 15px 0, xs: 0)\r\n        ));\r\n    }\r\n\r\n    .banner-subtitle {\r\n        font-family: 'FreeStyleRegular', sans-serif;\r\n        line-height: 50px;\r\n        padding-left: 35px;\r\n        padding-top: 40px;\r\n\r\n        @include media((\r\n            font-size: (xl: 40px, lg: 38px, md: 33px, xs: 28px),\r\n            padding-left: (lg: 35px 0, md: 15px 0, xs: 0)\r\n        ));\r\n    }\r\n}",".main-banner {\n  margin-top: 100px;\n  color: #fff;\n  background-image: url(\"../../../img/slider-bg.png\");\n  height: 600px;\n  padding: 100px 0;\n}\n\n.main-banner__container {\n  display: flex;\n}\n\n.main-banner__column {\n  width: 50%;\n}\n\n.main-banner__form {\n  background-color: #fff;\n  border-radius: 8px;\n  max-width: 300px;\n  margin: 0 20px auto auto;\n  padding: 40px 30px;\n}\n\n.main-banner__form .title {\n  color: #5363db;\n  font-family: 'OpenSansSemiBold', sans-serif;\n  font-size: 25px;\n  padding-bottom: 20px;\n}\n\n.main-banner__form input,\n.main-banner__form select {\n  border: none;\n  color: #888;\n  border-radius: 8px;\n  background-color: #f2f2f2;\n  height: 50px;\n  margin-bottom: 15px;\n  padding: 0 10px;\n  width: 100%;\n}\n\n.main-banner__form label {\n  color: red;\n  margin-top: -15px;\n  display: block;\n}\n\n.main-banner__form .form-btn {\n  color: #fff;\n  display: block;\n  margin-left: auto;\n  font-size: 16px;\n  font-family: \"OpenSansBold\";\n  border-radius: 8px;\n  background-color: #5b6ceb;\n  box-shadow: 2.121px 2.121px 5px 0px rgba(0, 0, 0, 0.15);\n  height: 50px;\n  margin-top: 15px;\n  width: 170px;\n}\n\n.main-banner .banner-title {\n  font-family: \"OpenSansBold\";\n  font-size: 48px;\n  text-transform: uppercase;\n  padding-left: 35px;\n  padding-top: 60px;\n}\n\n.main-banner .banner-subtitle {\n  font-family: 'FreeStyleRegular', sans-serif;\n  line-height: 50px;\n  padding-left: 35px;\n  padding-top: 40px;\n}\n\n@media only screen and (min-width: 0px) {\n  .main-banner .banner-title {\n    font-size: 30px;\n  }\n\n  .main-banner .banner-title {\n    padding-left: 0;\n  }\n\n  .main-banner .banner-subtitle {\n    font-size: 28px;\n  }\n\n  .main-banner .banner-subtitle {\n    padding-left: 0;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .main-banner .banner-title {\n    font-size: 38px;\n  }\n\n  .main-banner .banner-title {\n    padding-left: 15px 0;\n  }\n\n  .main-banner .banner-subtitle {\n    font-size: 33px;\n  }\n\n  .main-banner .banner-subtitle {\n    padding-left: 15px 0;\n  }\n}\n\n@media only screen and (min-width: 992px) {\n  .main-banner .banner-title {\n    font-size: 42px;\n  }\n\n  .main-banner .banner-title {\n    padding-left: 35px 0;\n  }\n\n  .main-banner .banner-subtitle {\n    font-size: 38px;\n  }\n\n  .main-banner .banner-subtitle {\n    padding-left: 35px 0;\n  }\n}\n\n@media only screen and (min-width: 1260px) {\n  .main-banner .banner-title {\n    font-size: 48px;\n  }\n\n  .main-banner .banner-subtitle {\n    font-size: 40px;\n  }\n}","$breakpoints: (\r\n        xl: 1260,\r\n        lg: 992,\r\n        md: 768,\r\n        sm: 380,\r\n        xs: 0\r\n);\r\n$media-direction: min;\r\n\r\n@mixin css_property($property, $value){\r\n    @if type_of($value) == string{\r\n        #{$property}: unquote($value);\r\n    }@else{\r\n        #{$property}: $value;\r\n    }\r\n}\r\n\r\n@function splitScreens($string, $seperator){\r\n    $string: inspect(quote($string));\r\n    $sepId: str-index(quote($string), $seperator);\r\n    @if($sepId){\r\n        $array: (quote(str-slice($string, 0, $sepId - 1)), quote(str-slice($string, $sepId + 1)));\r\n        @return $array;\r\n    }@else{\r\n        @return $string;\r\n    }\r\n}\r\n//@media screen\r\n@mixin media($properties, $orientation: false){\r\n\r\n    @each $property, $value in $properties {\r\n        @if type_of($value) == 'map' {\r\n            @each $screen, $val in $value {\r\n                $screen: splitScreens($screen, '-');\r\n                @if type_of($screen) == 'list'{\r\n                    $min_screen: nth($screen, 1);\r\n                    $max_screen: nth($screen, 2);\r\n                    @if $min_screen == min or $min_screen == max{\r\n                        $media-direction: $min_screen;\r\n                        @if $orientation {\r\n                            @if map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $max_screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }@else{\r\n                                @media only screen and (#{$media-direction}-width: $max_screen + 'px')  and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        } @else {\r\n                            @if map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $max_screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }@else{\r\n                                @media only screen and (#{$media-direction}-width: $max_screen + 'px') {\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        }\r\n                    } @else {\r\n                        @if $orientation {\r\n                            @if map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if map-has-key($breakpoints,  $min_screen) and not map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: $max_screen + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if not map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: $max_screen + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        } @else {\r\n                            @if map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if map-has-key($breakpoints,  $min_screen) and not map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: map-get($breakpoints, $min_screen) + 'px') and (max-width: $max_screen + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else if not map-has-key($breakpoints,  $min_screen) and map-has-key($breakpoints,  $max_screen){\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: map-get($breakpoints, $max_screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @media only screen and (min-width: $min_screen + 'px') and (max-width: $max_screen + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }@else{\r\n                    @if $screen == 'print' {\r\n                        @media print{\r\n                            @include css_property($property, $val);\r\n                        }\r\n                    } @else {\r\n                        @if $orientation {\r\n                            @if map-has-key($breakpoints, $screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $screen) + 'px') and (orientation: $orientation){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @if $screen == all {\r\n                                    @media only screen and (orientation: $orientation) {\r\n                                        @include css_property($property, $val);\r\n                                    }\r\n                                } @else {\r\n                                    @media only screen and (#{$media-direction}-width: $screen + 'px') and (orientation: $orientation) {\r\n                                        @include css_property($property, $val);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } @else {\r\n                            @if map-has-key($breakpoints, $screen){\r\n                                @media only screen and (#{$media-direction}-width: map-get($breakpoints, $screen) + 'px'){\r\n                                    @include css_property($property, $val);\r\n                                }\r\n                            } @else {\r\n                                @if $screen == all {\r\n                                    @include css_property($property, $val);\r\n                                } @else {\r\n                                    @media only screen and (#{$media-direction}-width: $screen + 'px'){\r\n                                        @include css_property($property, $val);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } @else {\r\n            @if $property == 'extend' {\r\n                @extend #{unquote($value)} !optional;\r\n            }@else {\r\n                @include css_property($property, $value);\r\n            }\r\n        }\r\n    }\r\n};"]}